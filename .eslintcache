[{"/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/App.js":"1","/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/Pages/Home/Home.jsx":"2","/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/index.js":"3","/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/Pages/Home/SinglePost.jsx":"4","/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/Pages/Home/Comments.jsx":"5","/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/Pages/Home/Page.jsx":"6","/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/reportWebVitals.js":"7"},{"size":384,"mtime":1613753275340,"results":"8","hashOfConfig":"9"},{"size":4333,"mtime":1613762786395,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1610017925000,"results":"11","hashOfConfig":"9"},{"size":1203,"mtime":1613762603968,"results":"12","hashOfConfig":"9"},{"size":173,"mtime":1613757062626,"results":"13","hashOfConfig":"9"},{"size":373,"mtime":1613762527007,"results":"14","hashOfConfig":"9"},{"size":362,"mtime":1610017925000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"webg74",{"filePath":"18","messages":"19","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/App.js",[],"/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/Pages/Home/Home.jsx",["31","32","33","34","35","36","37","38"],"/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/index.js",[],"/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/Pages/Home/SinglePost.jsx",["39","40","41","42","43","44","45","46"],"import React, {useState}from 'react'\nimport { Comments } from './Comments'\n\nexport const SinglePost = (props) => {\n\n    const [authorsName, updateAuthorsName] = useState(\"\")\n    const [comments, updateComments] = useState(props.comments)\n    const [postNumber, updatePostsNumber] = useState(2)\n\n        return(\n            <div style={{margin: \"3rem\"}}>\n                 <div style={{marginBottom: \"2rem\", fontWeight: \"bold\"}}>\n                    {\"Post Registration Number:\" + \" \" + props.postRegister}\n                </div>\n                <div style={{marginBottom: \"2rem\", fontWeight: \"bold\"}}>\n                    {\"Title:\" + \" \" + props.title}\n                </div>\n                <div style={{marginBottom: \"2rem\"}}>\n                    {props.body}\n                </div>\n                <div style={{marginBottom: \"2rem\"}}>\n                    {\"Author:\" + \" \" + props.name}\n                </div>\n                <div>Posts</div>\n                {comments && comments.map((value, index) => {\n                    if(index < postNumber){\n                      return <Comments key={value[1]}commentValue={value}/>\n                    }\n                })}\n            </div>\n        )\n}\n\n\n\n\n","/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/Pages/Home/Comments.jsx",["47"],"/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/Pages/Home/Page.jsx",["48"],"/Users/maxtaylor/Documents/axomic-frontend-test-graphql/src/reportWebVitals.js",[],{"ruleId":"49","severity":1,"message":"50","line":5,"column":10,"nodeType":"51","messageId":"52","endLine":5,"endColumn":20},{"ruleId":"49","severity":1,"message":"53","line":6,"column":10,"nodeType":"51","messageId":"52","endLine":6,"endColumn":18},{"ruleId":"49","severity":1,"message":"54","line":26,"column":13,"nodeType":"51","messageId":"52","endLine":26,"endColumn":20},{"ruleId":"49","severity":1,"message":"55","line":26,"column":22,"nodeType":"51","messageId":"52","endLine":26,"endColumn":27},{"ruleId":"49","severity":1,"message":"56","line":39,"column":17,"nodeType":"51","messageId":"52","endLine":39,"endColumn":30},{"ruleId":"57","severity":1,"message":"58","line":41,"column":52,"nodeType":"59","messageId":"60","endLine":41,"endColumn":54},{"ruleId":"61","severity":1,"message":"62","line":55,"column":7,"nodeType":"63","endLine":55,"endColumn":13,"suggestions":"64"},{"ruleId":"57","severity":1,"message":"65","line":111,"column":58,"nodeType":"59","messageId":"66","endLine":111,"endColumn":60},{"ruleId":"49","severity":1,"message":"67","line":6,"column":12,"nodeType":"51","messageId":"52","endLine":6,"endColumn":23},{"ruleId":"49","severity":1,"message":"68","line":6,"column":25,"nodeType":"51","messageId":"52","endLine":6,"endColumn":42},{"ruleId":"49","severity":1,"message":"69","line":7,"column":22,"nodeType":"51","messageId":"52","endLine":7,"endColumn":36},{"ruleId":"49","severity":1,"message":"70","line":8,"column":24,"nodeType":"51","messageId":"52","endLine":8,"endColumn":41},{"ruleId":"71","severity":1,"message":"72","line":13,"column":50,"nodeType":"73","messageId":"74","endLine":13,"endColumn":51},{"ruleId":"71","severity":1,"message":"72","line":16,"column":31,"nodeType":"73","messageId":"74","endLine":16,"endColumn":32},{"ruleId":"71","severity":1,"message":"72","line":22,"column":32,"nodeType":"73","messageId":"74","endLine":22,"endColumn":33},{"ruleId":"57","severity":1,"message":"65","line":25,"column":58,"nodeType":"59","messageId":"66","endLine":25,"endColumn":60},{"ruleId":"49","severity":1,"message":"75","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},{"ruleId":"49","severity":1,"message":"75","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},"no-unused-vars","'SinglePost' is defined but never used.","Identifier","unusedVar","'Comments' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'numberOfPosts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataNumber'. Either include it or remove the dependency array.","ArrayExpression",["76"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'authorsName' is assigned a value but never used.","'updateAuthorsName' is assigned a value but never used.","'updateComments' is assigned a value but never used.","'updatePostsNumber' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useState' is defined but never used.",{"desc":"77","fix":"78"},"Update the dependencies array to be: [data, dataNumber]",{"range":"79","text":"80"},[1700,1706],"[data, dataNumber]"]